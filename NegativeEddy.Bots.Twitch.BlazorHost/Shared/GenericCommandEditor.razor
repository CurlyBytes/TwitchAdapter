@using NegativeEddy.Bots.Twitch.SampleBot.Commands
    <div class="commandeditor">
        @switch (Command)
        {
            case EchoCommand cmd:
                <NoConfigCommandEdit Command="@cmd" />
                break;
            case LGResponseCommand cmd:
                <LGResponseCommandEdit Command="@cmd" />
                break;
            case BotCommandDecorator decorator:
                <DecoratedCommandEdit Decorator="@decorator" CommandReplaced="@OnCommandReplaced" />
                break;
            case TextResponseCommand tr:
                <TextResponseEdit Command="@tr" />
                break;
            case JoinCommand tr:
            case LeaveCommand lc:
                <NoConfigCommandEdit Command="@Command" />
                break;
            default:
                <UnknownCommandEdit Command="@Command" />
                break;
        }
    </div>


@code {
    [Parameter]
    public EventCallback<BotCommandReplacedEventArgs> CommandReplaced { get; set; }

    [Parameter]
    public IBotCommand? Command { get; set; }

    protected async Task OnCommandReplaced(BotCommandReplacedEventArgs args)
    {
        await CommandReplaced.InvokeAsync(args);
    }
}
